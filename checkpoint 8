//Your challenge is this: make a protocol that describes a building, adding various properties and methods, then create two structs, House and Office, that conform to it. Your protocol should require the following:

//A property storing how many rooms it has.
//A property storing the cost as an integer (e.g. 500,000 for a building costing $500,000.)
//A property storing the name of the estate agent responsible for selling the building.
//A method for printing the sales summary of the building, describing what it is along with its other properties.

protocol Building {
    var numberOfRooms: Int { get set }
    var cost: Int { get set }
    var realEstateAgent: String { get set }
    func getSaleSummary() -> String
}

class House: Building {
    var numberOfRooms: Int
    
    var cost: Int
    
    var realEstateAgent: String
    
    init(numberOfRooms: Int, cost: Int, realEstateAgent: String) {
        self.numberOfRooms = numberOfRooms
        self.cost = cost
        self.realEstateAgent = realEstateAgent
    }
    
    func getSaleSummary() -> String {
        return "Agent: \(self.realEstateAgent), price: \(self.cost), number of rooms: \(self.numberOfRooms)"
    }
}

class Office: Building {
    var numberOfRooms: Int
    
    var cost: Int
    
    var realEstateAgent: String
    
    init(numberOfRooms: Int, cost: Int, realEstateAgent: String) {
        self.numberOfRooms = numberOfRooms
        self.cost = cost
        self.realEstateAgent = realEstateAgent
    }
    
    func getSaleSummary() -> String {
        return "Agent: \(self.realEstateAgent), price: \(self.cost), number of rooms: \(self.numberOfRooms)"
    }
}

let house = House(numberOfRooms: 4, cost: 350_000, realEstateAgent: "Layla")

let office = Office(numberOfRooms: 8, cost: 2_000_000, realEstateAgent: "Heidi")

house.getSaleSummary()
office.getSaleSummary()
